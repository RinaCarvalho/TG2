{"prompt": "For a given integer n, write a function to get all ludic numbers smaller than or equal to n. The function must receive an integer as input and return a list of integers.", "response": "\ndef get_ludic_numbers(n):\n    \"\"\"\n    Returns a list of all ludic numbers smaller than or equal to n.\n\n    Args:\n        n (int): The upper bound for the ludic numbers.\n\n    Returns:\n        list: A list of all ludic numbers smaller than or equal to n.\n    \"\"\"\n\n    # Initialize the list of ludic numbers.\n    ludic_numbers = []\n\n    # Iterate over all the numbers from 1 to n.\n    for i in range(1, n + 1):\n        # Check if the number is ludic.\n        if is_ludic(i):\n            # Add the number to the list of ludic numbers.\n            ludic_numbers.append(i)\n\n    # Return the list of ludic numbers.\n    return ludic_numbers\n\n\ndef is_ludic(n):\n    \"\"\"\n    Checks if a number is ludic.\n\n    Args:\n        n (int): The number to check.\n\n    Returns:\n        bool: True if the number is ludic, False otherwise.\n    \"\"\"\n\n    # Convert the number to a string.\n    n_str = str(n)\n\n    # Check if the number is a palindrome.\n    if n_str == n_str[::-1]:\n        return False\n\n    # Check if the number has any repeated digits.\n    for i in range(len(n_str) - 1):\n        if n_str[i] == n_str[i + 1]:\n            return False\n\n    # Check if the number is divisible by any of its digits.\n    for i in range(1, len(n_str) + 1):\n        if n % i == 0:\n            return False\n\n    # The number is ludic.\n    return True\n"}