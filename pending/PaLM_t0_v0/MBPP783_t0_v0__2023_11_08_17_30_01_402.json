{"prompt": "For a given rgb value, write a function to convert the rgb color to hsv color. The function must receive three integers as inputs and return a tuple with three floats up to one decimal place.", "response": "\ndef rgb_to_hsv(r, g, b):\n  \"\"\"Converts an RGB color to HSV.\n\n  Args:\n    r: The red component of the RGB color, in the range [0, 255].\n    g: The green component of the RGB color, in the range [0, 255].\n    b: The blue component of the RGB color, in the range [0, 255].\n\n  Returns:\n    A tuple containing the hue, saturation, and value of the HSV color,\n    each as a float in the range [0.0, 1.0].\n  \"\"\"\n\n  # Convert the RGB values to floats in the range [0.0, 1.0].\n  r = r / 255.0\n  g = g / 255.0\n  b = b / 255.0\n\n  # Find the maximum and minimum RGB values.\n  max_rgb = max(r, g, b)\n  min_rgb = min(r, g, b)\n\n  # Calculate the hue.\n  if max_rgb == min_rgb:\n    hue = 0.0\n  elif max_rgb == r:\n    hue = (g - b) / (max_rgb - min_rgb)\n  elif max_rgb == g:\n    hue = 2.0 + (b - r) / (max_rgb - min_rgb)\n  else:\n    hue = 4.0 + (r - g) / (max_rgb - min_rgb)\n\n  # Calculate the saturation.\n  if max_rgb == 0.0:\n    saturation = 0.0\n  else:\n    saturation = 1.0 - min_rgb / max_rgb\n\n  # Calculate the value.\n  value = max_rgb\n\n  # Convert the hue to degrees in the range [0, 360].\n  hue = hue * 60.0\n\n  # Return the HSV color as a tuple of floats.\n  return (round(hue, 1), round(saturation, 1), round(value, 1))\n"}