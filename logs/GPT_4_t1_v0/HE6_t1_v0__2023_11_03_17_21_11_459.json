{"prompt": "For a given string with multiple groups of nested parentheses, write a function to determine the deepest level of nesting of the parentheses. The function must receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 1\n\nInput: ((())()())\nOutput: 3", "response": "def max_depth(s: str) -> int:\n    max_d = 0\n    current_max = 0\n\n    for char in s:\n        if char == '(':\n            current_max += 1\n            if current_max > max_d:\n                max_d = current_max\n        elif char == ')':\n            if current_max > 0:\n                current_max -= 1\n            else:\n                return -1\n    if current_max != 0:\n        return -1\n\n    return max_d"}