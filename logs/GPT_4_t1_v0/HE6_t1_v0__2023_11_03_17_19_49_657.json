{
    "prompt": "For a given string with multiple groups of nested parentheses, write a function to determine the deepest level of nesting of the parentheses. The function must receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 1\n\nInput: ((())()())\nOutput: 3",
    "response": "def find_max_depth(s):\n    current_max = 0\n    max_depth = 0\n    for i in range(len(s)):\n        if s[i] == '(':\n            current_max += 1\n            if current_max > max_depth:\n                max_depth = current_max\n        elif s[i] == ')':\n            if current_max > 0:\n                current_max -= 1\n            else:\n                return -1\n\n    if current_max != 0:\n        return -1\n\n    return max_depth",
    "test_results": "Tests passed successfully"
}