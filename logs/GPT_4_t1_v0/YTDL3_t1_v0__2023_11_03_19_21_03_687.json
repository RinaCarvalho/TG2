{
    "prompt": "The following `escape_rfc3986` function and docstring refer to a utility function to escape non-ASCII characters from a given string, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    pass```. Complete the function, having it return the escaped string.\n\nExamples:\n\nInput: !*'();:@&=+$,/?%#[]\nOutput: !*'();:@&=+$,/?%#[]\n\nInput: foo bar\nOutput: foo%20bar",
    "response": "\nimport urllib.parse\n\ndef escape_rfc3986(s):\n    \"\"\"\n    Escape non-ASCII characters as suggested by RFC 3986.\n    The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    # Convert string to bytes, ignoring errors\n    s_bytes = s.encode('utf8', 'ignore')\n    # Quote bytes string according to RFC 3986\n    quoted_bytes = urllib.parse.quote(s_bytes, safe=\"!*'();:@&=+$,/?%#[]\")\n    # Return the quoted string\n    return quoted_bytes\n",
    "test_results": "Tests passed successfully"
}