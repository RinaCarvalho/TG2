{"prompt": "For a given integer n, write a function to get all ludic numbers smaller than or equal to n. The function must receive an integer as input and return a list of integers.\n\nExamples:\n\nInput: 10\nOutput: [2, 3, 5, 7]\n\nInput: 25\nOutput: [2, 3, 5, 7, 11, 13, 17, 19, 23]", "response": "from itertools import compress\n\ndef ludic_numbers(n):\n    nums = [1] * (n+1)\n    nums[0] = nums[1] = 0\n    \n    p = 2\n    while p * p <= n:\n        if nums[p]:\n            for i in range(p * p, n+1, p):\n                nums[i] = 0\n        p += 1\n    \n    primes = list(compress(range(n+1), nums))\n    ludic = []\n    for i in range(2, n+1):\n        if i in primes:\n            ludic.append(i)\n        else:\n            for prime in primes:\n                if i % prime == 0:\n                    ludic.append(i)\n                    break\n    return ludic\n\nprint(ludic_numbers(10))\nprint(ludic_numbers(25))"}