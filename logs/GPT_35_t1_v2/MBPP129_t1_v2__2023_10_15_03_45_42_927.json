{"prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 7]]\nOutput: True\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nOutput: False", "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    \n    # Calculate the sum of the first row\n    sum_row = sum(matrix[0])\n    \n    # Check if the sum of each row is equal to the sum of the first row\n    for i in range(1, n):\n        if sum(matrix[i]) != sum_row:\n            return False\n    \n    # Check if the sum of each column is equal to the sum of the first row\n    for j in range(n):\n        sum_col = sum(row[j] for row in matrix)\n        if sum_col != sum_row:\n            return False\n    \n    # Check if the sum of the main diagonal is equal to the sum of the first row\n    sum_diagonal1 = sum(matrix[i][i] for i in range(n))\n    if sum_diagonal1 != sum_row:\n        return False\n    \n    # Check if the sum of the secondary diagonal is equal to the sum of the first row\n    sum_diagonal2 = sum(matrix[i][n-1-i] for i in range(n))\n    if sum_diagonal2 != sum_row:\n        return False\n    \n    return True"}