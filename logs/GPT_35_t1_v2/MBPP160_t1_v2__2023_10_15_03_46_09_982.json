{"prompt": "For three given integers a, b and n, write a function that returns integers x and y that satisfy ax + by = n. The function must receive three integers as inputs and return a tuple of integers, if there is a solution, or None otherwise.\n\nExamples:\n\nInput: ['3', '2', '7']\nOutput: None\n\nInput: ['4', '2', '7']\nOutput: (1, 2)", "response": "def diophantine(a, b, n):\n    if n % gcd(a, b) != 0:\n        return None\n    x0, y0, g = extended_gcd(a, b)\n    x, y = x0 * (n // g), y0 * (n // g)\n    return x, y\n\ndef gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\ndef extended_gcd(a, b):\n    if b == 0:\n        return 1, 0, a\n    else:\n        x, y, g = extended_gcd(b, a % b)\n        return y, x - (a // b) * y, g\n\na, b, n = int(input()), int(input()), int(input())\nprint(diophantine(a, b, n))"}