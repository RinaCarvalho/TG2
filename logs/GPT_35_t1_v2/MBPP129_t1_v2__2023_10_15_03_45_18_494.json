{"prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 7]]\nOutput: True\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nOutput: False", "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    \n    # Calculate the sum for each row\n    row_sums = [sum(row) for row in matrix]\n    \n    # Calculate the sum for each column\n    col_sums = [sum(col) for col in zip(*matrix)]\n    \n    # Calculate the sum for the main diagonal (\\)\n    main_diag_sum = sum(matrix[i][i] for i in range(n))\n    \n    # Calculate the sum for the secondary diagonal (/)\n    sec_diag_sum = sum(matrix[i][n-i-1] for i in range(n))\n    \n    # Check if all sums are equal\n    return all(sum == main_diag_sum for sum in row_sums + col_sums + [main_diag_sum, sec_diag_sum])\n\n# Testing the function\nprint(is_magic_square([[2, 7, 6], [9, 5, 1], [4, 3, 7]]))\nprint(is_magic_square([[2, 7, 6], [9, 5, 1], [4, 3, 8]]))"}