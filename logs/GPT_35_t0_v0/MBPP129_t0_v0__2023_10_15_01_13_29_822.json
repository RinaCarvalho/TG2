{"prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.", "response": "def is_magic_square(matrix):\n    num_rows = len(matrix)\n    num_cols = len(matrix[0])\n    \n    # Check if the number of rows is equal to the number of columns\n    if num_rows != num_cols:\n        return False\n    \n    # Calculate the expected magic sum\n    magic_sum = (num_rows * (num_rows ** 2 + 1)) // 2\n    \n    # Check if the sum of each row, column, and diagonal is equal to the magic sum\n    for i in range(num_rows):\n        row_sum = sum(matrix[i])\n        if row_sum != magic_sum:\n            return False\n        \n        col_sum = sum(matrix[j][i] for j in range(num_rows))\n        if col_sum != magic_sum:\n            return False\n    \n    diagonal_sum1 = sum(matrix[i][i] for i in range(num_rows))\n    if diagonal_sum1 != magic_sum:\n        return False\n    \n    diagonal_sum2 = sum(matrix[i][num_rows - i - 1] for i in range(num_rows))\n    if diagonal_sum2 != magic_sum:\n        return False\n    \n    # If all checks pass, the matrix is a magic square\n    return True"}