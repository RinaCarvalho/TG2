{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.",
    "response": "def is_magic_square(matrix):\n    n = len(matrix)\n\n    # Calculate the sum of the first row\n    expected_sum = sum(matrix[0])\n    \n    # Check rows sum\n    for row in matrix:\n        if sum(row) != expected_sum:\n            return False\n    \n    # Check columns sum\n    for j in range(n):\n        column_sum = sum(row[j] for row in matrix)\n        if column_sum != expected_sum:\n            return False\n    \n    # Check diagonal sum\n    diagonal_sum = sum(matrix[i][i] for i in range(n))\n    if diagonal_sum != expected_sum:\n        return False\n    \n    # Check anti-diagonal sum\n    anti_diagonal_sum = sum(matrix[i][n - 1 - i] for i in range(n))\n    if anti_diagonal_sum != expected_sum:\n        return False\n    \n    return True",
    "test_results": "Test failed: is_magic_square() takes 1 positional argument but 3 were given"
}