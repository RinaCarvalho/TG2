{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nOutput: True\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 7]]\nOutput: False",
    "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    magic_sum = n * (n**2 + 1) // 2\n\n    if len(matrix) != len(matrix[0]):\n        return False\n\n    rows_sum = [sum(row) for row in matrix]\n    columns_sum = [sum(column) for column in zip(*matrix)]\n    diagonal_sum_1 = sum(matrix[i][i] for i in range(n))\n    diagonal_sum_2 = sum(matrix[i][n - 1 - i] for i in range(n))\n\n    if rows_sum.count(magic_sum) == n and columns_sum.count(magic_sum) == n and diagonal_sum_1 == magic_sum and diagonal_sum_2 == magic_sum:\n        return True\n    else:\n        return False",
    "test_results": "Test failed: is_magic_square() takes 1 positional argument but 3 were given"
}