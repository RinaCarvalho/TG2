{
    "prompt": "For a given integer n, write a function to find the maximum sum possible according to the equation: f(n) = max( (f(n/2) + f(n/3) + f(n/4) + f(n/5)), n). The function must receive an integer as input and return an integer.\n\nExample:\nInput: 2\nLet's think step by step. First, by analyzing the equation, we notice the initial values are f(0) = 0, f(1) = max(f(0) + f(0) + f(0) + f(0), 1) = 1, and so on. Then, we must store these values in memory and recursively determine the value of the equation for different values of n, by successively calculating the floor of the division of n by 2, 3, 4 and 5, and comparing f(n//2) + f(n//3) + f(n//4) + f(n//5) with n, and finally extracting the maximum. In the example, f(2) = max(f(1) + f(0) + f(0) + f(0), 2) = max(1, 2) = 2.\nOutput: 2",
    "response": "def max_sum(n):\n    if n <= 1:\n        return n\n    else:\n        return max(max_sum(n//2) + max_sum(n//3) + max_sum(n//4) + max_sum(n//5), n)",
    "test_results": "Tests passed successfully"
}