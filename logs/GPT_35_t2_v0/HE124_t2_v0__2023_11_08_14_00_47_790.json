{
    "prompt": "For a given date string, write a function that checks whether the date is valid. A date is considered valid if it has a valid month and a valid number of days for its corresponding month, and if it has the format 'mm-dd-yyyy'. The function must receive a string as input and return a boolean.\n\nExample:\nInput: 03-11-2000\nLet's think step by step. First, we must determine whether the date is formatted correctly. Then if the format is correct, we must determine whether the date exists, by verifying the number of days in a month and whether the year is a leap year or not. In the example, '03-11-2000' follows the required 'mm-dd-yyyy' format. Additionally, March 11th of the year 2000 is an existing date. Therefore, '03-11-2000' is a valid date.\nOutput: True",
    "response": "\ndef is_valid_date(date_string):\n    try:\n        # Check if the date string is formatted correctly\n        month, day, year = date_string.split('-')\n        if len(month) == 2 and len(day) == 2 and len(year) == 4:\n\n            # Check if the month is valid\n            month = int(month)\n            if month < 1 or month > 12:\n                return False\n\n            # Check if the day is valid\n            day = int(day)\n            if month in [1, 3, 5, 7, 8, 10, 12):\n                if day < 1 or day > 31:\n                    return False\n            elif month == 2:\n                if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):\n                    if day < 1 or day > 29:\n                        return False\n                else:\n                    if day < 1 or day > 28:\n                        return False\n            else:\n                if day < 1 or day > 30:\n                    return False\n\n            # Check if the year is valid\n            year = int(year)\n            if year < 1:\n                return False\n\n            return True\n        else:\n            return False\n    except:\n        return False\n\n# Example usage\nprint(is_valid_date('03-11-2000'))  # True\n",
    "test_results": "Test failed: closing parenthesis ')' does not match opening parenthesis '[' (<string>, line 15)"
}