{"prompt": "Given a list of integers and a list of operations, write a function that builds an algebraic expression by sequentially placing each operation in the list of operations between two integers in the list of integers, and calculates the result of this expression. The function must receive a list of integers and a list of strings and return an integer.\n\nExample:\nInput: ['[2, 3, 4, 5]', \"['+', '*', '-']\"]\nLet's think step by step. First, the list of integers and the list of operands must be joined in order to form an expression. Then, the expression must be evaluated, respecting the priority of operands. In the example, the expression obtained by joining the inputs is 2 + 3 * 4 - 5 = 9.\nOutput: 9", "response": "# Here is the code to solve this problem:\n\ndef calculate_expression(integers, operations):\n    expression = ''\n    for i in range(len(operations)):\n        expression += str(integers[i]) + operations[i]\n    expression += str(integers[-1])\n\n    result = eval(expression)\n    return result"}