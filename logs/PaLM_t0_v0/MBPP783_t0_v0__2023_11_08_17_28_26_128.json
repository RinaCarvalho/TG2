{"prompt": "For a given rgb value, write a function to convert the rgb color to hsv color. The function must receive three integers as inputs and return a tuple with three floats up to one decimal place.", "response": "\ndef rgb_to_hsv(r, g, b):\n    \"\"\"Converts an RGB color to HSV.\n\n    Args:\n        r (int): The red component of the RGB color.\n        g (int): The green component of the RGB color.\n        b (int): The blue component of the RGB color.\n\n    Returns:\n        tuple: A tuple containing the hue, saturation, and value of the HSV color.\n    \"\"\"\n\n    # Convert the RGB values to floats.\n    r = float(r) / 255\n    g = float(g) / 255\n    b = float(b) / 255\n\n    # Find the maximum and minimum RGB values.\n    max_rgb = max(r, g, b)\n    min_rgb = min(r, g, b)\n\n    # Calculate the hue.\n    if max_rgb == min_rgb:\n        hue = 0\n    elif max_rgb == r:\n        hue = (g - b) / (max_rgb - min_rgb)\n    elif max_rgb == g:\n        hue = 2 + (b - r) / (max_rgb - min_rgb)\n    else:\n        hue = 4 + (r - g) / (max_rgb - min_rgb)\n\n    # Calculate the saturation.\n    if max_rgb == 0:\n        saturation = 0\n    else:\n        saturation = 1 - (min_rgb / max_rgb)\n\n    # Calculate the value.\n    value = max_rgb\n\n    # Convert the hue to degrees.\n    hue = hue * 60\n\n    # Round the hue, saturation, and value to one decimal place.\n    hue = round(hue, 1)\n    saturation = round(saturation, 1)\n    value = round(value, 1)\n\n    # Return the HSV color as a tuple.\n    return (hue, saturation, value)\n"}