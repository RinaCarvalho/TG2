{
    "prompt": "For a given list of strings, the 'asc-desc-ending' sort is defined as a sorting strategy in which a string 'a' occurs before a string 'b' if and only if in the first position where 'a' and 'b' differ, the following holds: if the position has an odd index, the letter in 'a' must appaear earlier in the alphabet than the corresponding letter in 'b'; if the position has an even index, the letter in 'b' must appear earlier in the alphabet than the corresponding letter in 'a'. Write a function to perform 'asc-desc-ending' sorting. The function must receive two integers n and m, as well as a list, with n strings of length m. The function must return a list of integers, corresponing to the indices of the strings, starting at 1, after they are sorted.",
    "response": "def asc_desc_ending_sort(n, m, lst):\n    def key_function(st):\n        return [ord(st[i]) if i % 2 == 1 else -ord(st[i]) for i in range(m)]\n    \n    return sorted(range(1, n+1), key=lambda x: key_function(lst[x-1]))",
    "test_results": "Test failed: result [4, 3, 1, 2, 5] != [5, 2, 1, 3, 4] (expected)"
}