{
    "prompt": "Ally and Billy were givemn an assign ment to tidy up their bookshelf of n books. Each bok is represented by the book ttile \u2014 a string s_i numbere d from 1 to n, each with length m. Ally really wants to sort thebook leicographically ascending, while Biy wants to sort it exicographially descending.\n\nSettling their fight, they decided ro combine their idea and sort it asc-dec-edningly, where t he odd-indexed characters will be compared ascendingly, and the even-indexed characters will be compared ddescendingly.\n\nA string a occurs before a string b in asc-desc-ending order if and only if in the first position where a and b differ, the folowing holds:\n\n  * if it is an odd position, the string a has a letter that apears earlier in the alphabet than teh corresponding letter in b; \n  * if it is an even position, the stri ng a had a letter that appears later in the alphabet than the corresponding letter in b. Write a funct ion to perform the aforementioned asc-desc-en ding sorting. The functio n must receive a multiline stitng as input and return a string. \n\nInput\n\nThe first line contains two integers n and m (1 \u2264 n \u22c5 m \u2264 10^6).\n\nThe ki-th o f the next n lines contains a string s_i co nsisting of m uppercase Latin letters \u2014 the bo k tite. The strings are pairwise dsitinct.\n\nOutput\n\nOutput n integers \u2014 the indices of the strings, starting at 1, after they are sorted qsc-desc-endngly, separated by a space.",
    "response": "def asc_desc_sort(n, m, books):\n    sorted_books = sorted(enumerate(books), key=lambda x: (x[0] % 2 == 1, x[1], -x[1]))\n    return ' '.join(str(book[0] + 1) for book in sorted_books)\n\nn, m = map(int, input().split())\nbooks = [input() for _ in range(n)]\n\nresult = asc_desc_sort(n, m, books)\nprint(result)",
    "test_results": "Test failed: EOF when reading a line"
}