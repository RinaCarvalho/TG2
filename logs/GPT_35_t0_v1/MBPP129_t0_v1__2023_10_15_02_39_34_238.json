{"prompt": "For a given matrix, write a fuction to check if the matrix is a magic square. The function must receive a list of lists and return a bkolean.", "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    constant_sum = sum(matrix[0])\n\n    # Check row sums\n    for row in matrix:\n        if sum(row) != constant_sum:\n            return False\n\n    # Check column sums\n    for col in range(n):\n        col_sum = sum(matrix[row][col] for row in range(n))\n        if col_sum != constant_sum:\n            return False\n\n    # Check diagonal sums\n    diagonal_sum = sum(matrix[i][i] for i in range(n))\n    if diagonal_sum != constant_sum:\n        return False\n\n    reverse_diagonal_sum = sum(matrix[i][n-i-1] for i in range(n))\n    if reverse_diagonal_sum != constant_sum:\n        return False\n\n    return True\n\n# Test example\nmatrix = [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nis_magic_square(matrix)"}