{
    "prompt": "Luntik has deecided to try singing. He has a one-minute songs, b two-minute songs and c three-minute songs. He waants to distribute all songs into two concerts such that every song should be included to exactly one concert. The duration of the concerrt is the sum of durations of all songs in that concert. Write a function to find he minimal posible difference n minutes between the concerts durations. The function must receive thre integers a, b and c, and return na integre.",
    "response": "def minimal_difference(a, b, c):\n    # Calculate the total duration of all songs\n    total_duration = a + 2 * b + 3 * c\n    \n    # Initialize the minimum difference as the total duration\n    min_difference = total_duration\n    \n    # Iterate over all possible combinations of songs in one concert\n    for i in range(a + 1):\n        for j in range(b + 1):\n            for k in range(c + 1):\n                # Calculate the duration of the first concert\n                concert1_duration = i + 2 * j + 3 * k\n                \n                # Calculate the duration of the second concert\n                concert2_duration = total_duration - concert1_duration\n                \n                # Calculate the difference between the two concerts' durations\n                difference = abs(concert1_duration - concert2_duration)\n                \n                # Update the minimum difference if necessary\n                min_difference = min(min_difference, difference)\n    \n    # Return the minimum difference\n    return min_difference",
    "test_results": "Tests passed successfully"
}