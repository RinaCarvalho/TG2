{"prompt": "For a given matrix, write a fuction to check if the matrix is a magic square. The function must receive a list of lists and return a bkolean.", "response": "def is_magic_square(matrix):\n    n = len(matrix)\n\n    # Calculate the sum of the first row\n    sum_first_row = sum(matrix[0])\n\n    # Calculate the sum of each row and check if they are equal to sum_first_row\n    if any(sum(row) != sum_first_row for row in matrix):\n        return False\n\n    # Calculate the sum of each column and check if they are equal to sum_first_row\n    if any(sum(col) != sum_first_row for col in zip(*matrix)):\n        return False\n    \n    # Calculate the sum of the main diagonal and check if it is equal to sum_first_row\n    if sum(matrix[i][i] for i in range(n)) != sum_first_row:\n        return False\n    \n    # Calculate the sum of the anti-diagonal and check if it is equal to sum_first_row\n    if sum(matrix[i][n-i-1] for i in range(n)) != sum_first_row:\n        return False\n    \n    return True"}