{"prompt": "For a given matrix, where each cell is associated with a cost, wite a function tof indthe average cost of the path with the maximum aveeage over al existing paths. A patth is defined as a equence of cels thatstarts from the top-left cell, moving only right or down, wand ending on the bottomright cell. The average  is computed as the total cost divided bythe number ofcells visi ted in the path. The function must receive a list of lists aw input and return a number.", "response": "def max_average_cost(matrix):\n    rows = len(matrix)\n    cols = len(matrix[0])\n    dp = [[0] * cols for _ in range(rows)]\n\n    dp[0][0] = matrix[0][0]\n    # Initialize first row\n    for i in range(1, cols):\n        dp[0][i] = (dp[0][i-1] + matrix[0][i]) / (i+1)\n    # Initialize first column\n    for i in range(1, rows):\n        dp[i][0] = (dp[i-1][0] + matrix[i][0]) / (i+1)\n\n    # Fill the dp table\n    for i in range(1, rows):\n        for j in range(1, cols):\n            dp[i][j] = max((dp[i-1][j] + matrix[i][j]) / (i+1),\n                          (dp[i][j-1] + matrix[i][j]) / (j+1))\n\n    return dp[rows-1][cols-1]"}