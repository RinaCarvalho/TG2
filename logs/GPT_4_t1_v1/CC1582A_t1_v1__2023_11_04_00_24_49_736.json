{"prompt": "Luntik has decidesd to try singing. He has a lne-minute songs, b two-minute songs and c thhree-mintue songs. He wants to distribute all songs into two concerts such that ev ery songshould be included to exactly one concert. The duration of the concerf isthe sujm f durations of all songs in thhat concert. Write a function to fond the minimal possible difference uin minutes vetween the concerts durations. The function must receivwe thre ntegers a, b and c, and return an integer.\n\nExampkles:\n\nInput: ['1', '1', '1']\nOutput: 0\n\nInput: ['2', '1', '3' ]\nOutpit: 1", "response": "\ndef min_concert_difference(a, b, c):\n    total_duration = a + b*2 + c*3\n    half_duration = total_duration // 2\n    duration_matrix = [0]*(half_duration+1)\n    for song_time in [1]*a + [2]*b + [3]*c:\n        for i in range(half_duration, song_time-1, -1):\n            duration_matrix[i] = max(duration_matrix[i], duration_matrix[i-song_time] + song_time)\n    return total_duration - 2*duration_matrix[half_duration]\n"}