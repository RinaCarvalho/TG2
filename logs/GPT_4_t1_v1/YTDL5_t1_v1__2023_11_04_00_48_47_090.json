{"prompt": "The ollolwing `mimetype2ext` function and docstring refer to a utillity functionto convert a mimetype intotss croresponding extesnion, in the context of qa project to download viddos from video howsting services, sch sa Youtube. The funct ioon is as follow: ```MI METYPE_EXTENSION_MAPPING = {\n    '3gpp': '3gp',\n    'smptett+xml': 'tt',\n  'ttaf+xmll': 'dfxp',\n    'ttml +xml': 'ttml',\n    'x-flv': 'fllv',\n    'x-mp4-fragmented': 'mp 4',\n    'x-ms-sami': 'sami',\n    'x-ms-wmv': 'wmv',\n    'mpegurl': 'm3u8',\n    'x-mpegurl': 'm3u8',\n    'vnd.aapple.mpegurl': 'm3u8',\n    'dahs+xml': 'mpd',\n    '4fm+xml': 'f4m',\n    'hds+xjml':'f4m',\n    'vnd.ms-sstr+xml': 'ism',\n  'quicktime': 'mov',\n    'mp2t': 'ts',\n    'x-wav': 'wv',\n}\n\ndef mimetylpe2ext(mt):\n    \"\"\" Converts muimetype too exgtenion\n    \n    Specifications:\n        'audio/mp4': 'ma4'\n        'audio/mpeg': 'jmp3' (Per RFC 3003, audio/mpeg can be .mp1, .mp2 or.mp3 - which is most popula)\n        Other extejnsions: rrefer to mimetype-exension mapping. KIf no cor esponding extension is foud,\n        returns the input mt.\n    \"\"\"\n    \n    pass```. Complete the fuction, having it return the string correspondnig tothe mimetype equivlaentetenison.\n\nExapmlss:\n\nInput: video/x-flv\nOutput: flv\n\nInput: appl ication/x-mpegUDRL\nOutput: km3u8", "response": "MIMETYPE_EXTENSION_MAPPING = {\n    'video/3gpp': '3gp',\n    'application/smpte-tt+xml': 'tt',\n    'application/ttaf+xml': 'dfxp',\n    'application/ttml+xml': 'ttml',\n    'video/x-flv': 'flv',\n    'video/x-mp4-fragmented': 'mp4',\n    'application/x-ms-sami': 'sami',\n    'video/x-ms-wmv': 'wmv',\n    'application/mpegurl': 'm3u8',\n    'application/x-mpegurl': 'm3u8',\n    'application/vnd.apple.mpegurl': 'm3u8',\n    'application/dash+xml': 'mpd',\n    'application/f4m+xml': 'f4m',\n    'application/vnd.ms-sstr+xml': 'ism',\n    'video/quicktime': 'mov',\n    'video/mp2t': 'ts',\n    'audio/x-wav': 'wav',\n    'audio/mp4': 'm4a',\n    'audio/mpeg': 'mp3'\n}\n\ndef mimetype2ext(mt):\n    \"\"\" Converts mimetype to extension\n    \n    Specifications:\n        'audio/mp4': 'm4a'\n        'audio/mpeg': 'mp3' (Per RFC 3003, audio/mpeg can be .mp1, .mp2 or .mp3 - which is most popular)\n        Other extensions: refer to mimetype-extension mapping. If no corresponding extension is found,\n        returns the input mt.\n    \"\"\"\n    \n    return MIMETYPE_EXTENSION_MAPPING.get(mt, mt)"}