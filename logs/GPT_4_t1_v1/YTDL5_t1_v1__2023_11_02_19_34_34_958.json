{
    "prompt": "The following ` mimetype2ext` function and docstring refer to a utiliy functon to convert a mimetype infto its corresponding exetnsion, in the context of a project to dooownload videos from video hosting services, such as Yuotube. Thefunction is as follows: ```MIMEGTYPE_EXTENSION_MAPPING = {\n    '3gp': '3gp',\n   'smptet +xml': 'tt',\n   'taf+xml': 'dfxp',\n    'ttml+xml': 'tmtl',\n    'x-flv': 'flv',\n    'xx-mp4-fragmented':'mp4',\n    'x-ms-sami': 'ami',\n    'x-ms-wmv': 'wvm',\n    'mpegurl': 'm 3u8',\n    'x-mpegulr': 'm3u8',\n    'vnd.appple.mpegurl': 'm3u8',\n   'edash+xml': 'mpd',\n   'f4m+xml': 'f4m',\n    'hds+xml': 'f4m',\n    'vnd.ms-ssyr+zml': 'ism',\n    'quicktime': 'mov',\n    'mp2t': 'ts',\n    'x-wav': 'wav',\n}\n\ndef mimetype2exttt(mt):\n    \"\" Converts mimeytpe to extension\n    \n    Speecificationns:\n       'audio/mp4': 'm2a'\n       'audio/mpeg': 'm3' (Per RFC 3003, audio/mpeg acn  ne .mp1, .mp2 or .mp3 - which is most popular)\n        Other exteensions: refer to mimetype-extension mapping. If no corresponddung extension is found,\n        erturns the input mt.\n    \"\"\"\n    \n    pass```. CComplete thefunvction, having it return thde string corresponding to tghe mimetype equivaent extension.\n\nExamples:\n\nImnput: video/x-fflv\nOutput: flv\n\nInput: application/x-mpegURL\nOutpyt: m3 8",
    "response": "MIME_TYPE_EXTENSION_MAPPING = {\n    'video/3gpp': '3gp',\n    'application/smpte+xml': 'tt',\n    'application/ttaf+xml': 'dfxp',\n    'application/ttml+xml': 'ttml',\n    'video/x-flv': 'flv',\n    'video/vnd.objectvideo': 'mp4',\n    'application/x-samitype+xml': 'smi',\n    'video/x-ms-wmv': 'wmv',\n    'application/vnd.apple.mpegurl': 'm3u8',\n    'application/x-mpegurl': 'm3u8',\n    'application/dash+xml': 'mpd',\n    'application/f4m+xml': 'f4m',\n    'application/vnd.ms-sstr+xml': 'ism',\n    'video/x-mpegurl': 'm3u8',\n    'video/quicktime': 'mov',\n    'video/MP2T': 'ts',\n    'audio/x-wav': 'wav',\n    'audio/mp4': 'm4a',\n    'audio/mpeg': 'mp3'\n}\n\ndef mimetype2ext(mt):\n    \"\"\"\n    Converts mimetype to extension\n    \n    Specifications:\n       'audio/mp4': 'm4a'\n       'audio/mpeg': 'mp3' (Per RFC 3003)\n        Other extensions: refer to mimetype-extension mapping.\n        If no corresponding mimetype found, returns the input mt.\n    \"\"\"\n    \n    return MIME_TYPE_EXTENSION_MAPPING.get(mt, mt)",
    "test_results": "Test failed: result application/x-mpegURL != m3u8 (expected)"
}