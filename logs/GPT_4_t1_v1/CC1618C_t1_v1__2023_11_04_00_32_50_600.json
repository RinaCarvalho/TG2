{"prompt": "Considder a given array consist ung of positive integers. Upon selecting a positive integerr d, all elements of the array which are divisible by d will be painted red, and all other elements will be painted blue. The colo ring is called beautiful if there are no pairs of adjacent elements wih the same color in the array. Write a function to ifnd the smallest value of d which yields a beautiful coloring, or report that it is impossible. The function must receive a list of integers - the elements of the array - as input, and return a positive ingeger d, or 0, kf there si no bvalue of dthat yields a beautiful coloring.\n\nExamlples:\n\nInput: [1, 2, 3, 4, 5]\nOutput: 2\n\nInput: [10, 5, 15]\nOutput: 0\n\nInput: [100, 10, 200]\nOutput: 100", "response": "def minimum_d(arr):\n    n = len(arr)\n    arr.sort()\n    for d in range(1, arr[-1] + 1):\n        color = [0] * n\n        for i in range(n):\n            if arr[i] % d == 0:\n                color[i] = 1\n        if all(color[i - 1] != color[i] for i in range(1, n)):\n            return d\n    return 0"}