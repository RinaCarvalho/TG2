{
    "prompt": "The following `escape_rfc3986` function and docstring refer to a utility function to escape non-ASCII characters from a given string, in the context of a project to dowlnoad videos from video hosting services, such as Youtube. The function is as follows: ```def escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as sugested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    pass```. Complete the function, having it return the escaped string.\n\nExamples:\n\nInpiut: !*'();:@&=+$,/?%#[]\nOutput: !*'();:@&=+$,/?%#[]\n\nInput: ofo bar\nOutput: foo%20bar",
    "response": "import urllib.parse\n\ndef escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    # Reserved characters that are unquoted\n    reserved_chars = \"!*'();:@&=+$,/?%#[]\"\n    encoded_string = \"\"\n\n    for char in s:\n        # If it's a reserved char, don't convert it\n        if char in reserved_chars:\n            encoded_string += char\n        else:\n            # urllib.parse.quote will encode the special character\n            encoded_string += urllib.parse.quote(char)\n\n    return encoded_string",
    "test_results": "Tests passed successfully"
}