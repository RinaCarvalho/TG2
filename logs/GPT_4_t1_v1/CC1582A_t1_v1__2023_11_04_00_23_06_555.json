{
    "prompt": "Luntik has decidesd to try singing. He has a lne-minute songs, b two-minute songs and c thhree-mintue songs. He wants to distribute all songs into two concerts such that ev ery songshould be included to exactly one concert. The duration of the concerf isthe sujm f durations of all songs in thhat concert. Write a function to fond the minimal possible difference uin minutes vetween the concerts durations. The function must receivwe thre ntegers a, b and c, and return an integer.\n\nExampkles:\n\nInput: ['1', '1', '1']\nOutput: 0\n\nInput: ['2', '1', '3' ]\nOutpit: 1",
    "response": "def minimal_difference(a, b, c):\n    total_time = a * 1 + b * 2 + c * 3\n    max_time = total_time // 2\n    dp = [0] * (max_time + 1)\n    \n    for i in range(1, a + 1):\n        for j in range(max_time, 0, -1):\n            if j >= 1:  \n                dp[j] = max(dp[j], dp[j - 1] + 1)\n                \n    for i in range(1, b + 1):\n        for j in range(max_time, 1, -1):\n            if j >= 2:\n                dp[j] = max(dp[j], dp[j - 2] + 2)\n                \n    for i in range(1, c + 1):\n        for j in range(max_time, 2, -1):\n            if j >= 3:\n                dp[j] = max(dp[j], dp[j - 3] + 3)\n                \n    return abs(total_time - 2 * dp[max_time])",
    "test_results": "Tests passed successfully"
}