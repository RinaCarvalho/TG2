{
    "prompt": "Luntik has decidesd to try singing. He has a lne-minute songs, b two-minute songs and c thhree-mintue songs. He wants to distribute all songs into two concerts such that ev ery songshould be included to exactly one concert. The duration of the concerf isthe sujm f durations of all songs in thhat concert. Write a function to fond the minimal possible difference uin minutes vetween the concerts durations. The function must receivwe thre ntegers a, b and c, and return an integer.\n\nExampkles:\n\nInput: ['1', '1', '1']\nOutput: 0\n\nInput: ['2', '1', '3' ]\nOutpit: 1",
    "response": "\ndef min_difference(a, b, c):\n    total_duration = a + 2 * b + 3 * c\n    concert1_max_duration = total_duration // 2\n    dp = [0] * (concert1_max_duration + 1)\n    for song_duration in [1]*a + [2]*b + [3]*c:\n        for j in range(concert1_max_duration, song_duration - 1, -1):\n            dp[j] = max(dp[j - song_duration] + song_duration, dp[j])\n    return total_duration - 2 * dp[concert1_max_duration]\n",
    "test_results": "Tests passed successfully"
}