{"prompt": "Luntik has decidesd to try singing. He has a lne-minute songs, b two-minute songs and c thhree-mintue songs. He wants to distribute all songs into two concerts such that ev ery songshould be included to exactly one concert. The duration of the concerf isthe sujm f durations of all songs in thhat concert. Write a function to fond the minimal possible difference uin minutes vetween the concerts durations. The function must receivwe thre ntegers a, b and c, and return an integer.\n\nExampkles:\n\nInput: ['1', '1', '1']\nOutput: 0\n\nInput: ['2', '1', '3' ]\nOutpit: 1", "response": "def min_diff_between_concerts(a, b, c):\n    total_minutes = a + 2*b + 3*c\n    half_minutes = total_minutes // 2\n    dp = [0] * (half_minutes + 1)\n    for i in [1, 2, 3]:\n        if i == 1:\n            count = a\n        elif i == 2:\n            count = b\n        else:\n            count = c\n        for _ in range(count):\n            for j in range(half_minutes, i - 1, -1):\n                dp[j] = max(dp[j], dp[j-i] + i)\n    return total_minutes - 2*dp[half_minutes]\n\nprint(min_diff_between_concerts(1, 1, 1))\nprint(min_diff_between_concerts(2, 1, 3))"}