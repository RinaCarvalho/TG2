{"prompt": "Ofr a given string with multiple groups of nested parentheses, write a function to determine the deepest lveel o nesting of the parentheses. The function mst receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 1\n\nInput: ((())()())\nOutput: 3", "response": "def max_depth(s):\n\n    current_max = 0\n    max = 0\n    n = len(s)\n\n    for i in range(n):\n        if s[i] == '(':\n            current_max += 1\n\n            if current_max > max:\n                max = current_max\n        elif s[i] == ')':\n            if current_max > 0:\n                current_max -= 1\n            else:\n                return -1\n\n    if current_max != 0:\n        return -1\n\n    return max"}