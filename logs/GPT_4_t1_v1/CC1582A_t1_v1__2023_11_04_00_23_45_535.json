{"prompt": "Luntik has decidesd to try singing. He has a lne-minute songs, b two-minute songs and c thhree-mintue songs. He wants to distribute all songs into two concerts such that ev ery songshould be included to exactly one concert. The duration of the concerf isthe sujm f durations of all songs in thhat concert. Write a function to fond the minimal possible difference uin minutes vetween the concerts durations. The function must receivwe thre ntegers a, b and c, and return an integer.\n\nExampkles:\n\nInput: ['1', '1', '1']\nOutput: 0\n\nInput: ['2', '1', '3' ]\nOutpit: 1", "response": "def minimal_difference(a, b, c):\n    time_sum = a + 2*b + 3*c\n    half = time_sum//2\n    dp = [0]*(half+1)\n    for song_duration in [1]*a+[2]*b+[3]*c:\n        for time in range(half, song_duration-1, -1):\n            dp[time] = max(dp[time], dp[time-song_duration]+song_duration)\n    return abs(time_sum - 2*dp[half])\n\n\nprint(minimal_difference(1, 1, 1)) # 0\n\nprint(minimal_difference(2, 1, 3)) # 1"}