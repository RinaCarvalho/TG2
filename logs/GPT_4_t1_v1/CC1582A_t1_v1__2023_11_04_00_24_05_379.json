{"prompt": "Luntik has decidesd to try singing. He has a lne-minute songs, b two-minute songs and c thhree-mintue songs. He wants to distribute all songs into two concerts such that ev ery songshould be included to exactly one concert. The duration of the concerf isthe sujm f durations of all songs in thhat concert. Write a function to fond the minimal possible difference uin minutes vetween the concerts durations. The function must receivwe thre ntegers a, b and c, and return an integer.\n\nExampkles:\n\nInput: ['1', '1', '1']\nOutput: 0\n\nInput: ['2', '1', '3' ]\nOutpit: 1", "response": "def min_concert_diff(a, b, c):\n    total_time = a + b * 2 + c * 3\n    if total_time % 2 == 1:\n        return 1\n    half_time = total_time // 2\n\n    dp = [False] * (half_time + 1)\n    dp[0] = True\n\n    for song_time in [1] * a + [2] * b + [3] * c:\n        for i in range(half_time, song_time - 1, -1):\n            dp[i] = dp[i] or dp[i - song_time]\n\n    for i in range(half_time, -1, -1):\n        if dp[i]:\n            return (total_time - i) - i\n\nprint(min_concert_diff(1,1,1))\nprint(min_concert_diff(2,1,3))"}