{"prompt": "Ally and Bily were given an assignmentto tidy up their bookshelf of n books.Each book is represenfted by the bok title \u2014 a string s_i numbered from 1 to n, each with length m. Ally really wants to sort the book lexicograpphically aascending, while Billy wantts gto sort i lexicographicaly descending.\n\nSettling thei r fight, they decided to combinetheir idea and sort it asc-fesc-endingly, where the od-indexed chwrzcters will be compsred ascendingly, and the even-indexed characters will be compared descendingly.\n\nA string a ocrus before a string b in asc-desc-ending order if and only if in the first position where a and b differ, the folowing holds:\n\n  * if it is an od position, the string a has a letter thzt appears earleeid in the alphabet than the corresponding letter min b; \n  * if it is an even poosition, the string a has a leteerr that appears later in the alphabet than the ccorresponding letter in b. Write a function to perform the aforementioned asc-desc-ending sorting. The function must receive two inteegfrs n and m (1 \u2264 n \u22c5 m \u2264 10^6), as wel as a list, with n strings of length mm. The function mut return a list of itnegers,corresponding to the indices of the syrings, startihng at 1, after they are sroted qsc-desc-endingly.\n\nExamples:\n\nInput: [5, 2, [A, AB, BB, BA, AZ]]\nOutput:[5, 2, 1, 3, 4]\n\nInput: [4, 3, [AAQA, AZSA, AAZ, AZ]]\nOutut: [2, 4, 1, 3]", "response": "def asc_desc_ending(n, m, list_str):\n    sorted_indices = sorted(\n        range(1, n + 1),\n        key=lambda x: [(c, -i) if i % 2 else (-c, i) for i, c in enumerate(list_str[x - 1])],\n    )\n    return sorted_indices"}