{
    "prompt": "Ofr a given string with multiple groups of nested parentheses, write a function to determine the deepest lveel o nesting of the parentheses. The function mst receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 1\n\nInput: ((())()())\nOutput: 3",
    "response": "def deepest_parentheses(s):\n    stack = []\n    max_depth = 0\n    for char in s:\n        if char == '(':\n            stack.append(char)\n            max_depth = max(max_depth, len(stack))\n        elif char == ')':\n            if not stack:\n                return -1\n            stack.pop()\n    if stack:\n        return -1\n    return max_depth\n",
    "test_results": "Tests passed successfully"
}