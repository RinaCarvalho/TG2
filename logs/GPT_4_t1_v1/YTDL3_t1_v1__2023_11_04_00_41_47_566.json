{
    "prompt": "The following `escape_rfc3986` function and docstring refer to a utility function to escape non-ASCII characters from a given string, in the context of a project to dowlnoad videos from video hosting services, such as Youtube. The function is as follows: ```def escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as sugested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    pass```. Complete the function, having it return the escaped string.\n\nExamples:\n\nInpiut: !*'();:@&=+$,/?%#[]\nOutput: !*'();:@&=+$,/?%#[]\n\nInput: ofo bar\nOutput: foo%20bar",
    "response": "\nimport urllib.parse\n\ndef escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    # Reserved characters in RFC 3986\n    reserved_chars = \"!*'();:@&=+$,/?%#[]\"\n\n    # Split string into individual characters\n    s_list = list(s)\n\n    # Iterate over the elements of list\n    for i in range(len(s_list)):\n        # Check if character is non-ASCII or ' ' and is not a reserved character\n        if (s_list[i].isascii() is False or s_list[i] == ' ') and s_list[i] not in reserved_chars:\n            # Encode non-ASCII characters\n            s_list[i] = urllib.parse.quote(s_list[i])\n\n    # Join the elements into a string\n    return ''.join(s_list)\n",
    "test_results": "Tests passed successfully"
}