{
    "prompt": "Ofr a given string with multiple groups of nested parentheses, write a function to determine the deepest lveel o nesting of the parentheses. The function mst receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 1\n\nInput: ((())()())\nOutput: 3",
    "response": "def max_depth(S):\n    current_max = 0 \n    max_ = 0\n    n = len(S)\n  \n    for i in range(n):\n        if S[i] == '(':\n            current_max += 1\n  \n            if current_max > max_:\n                max_ = current_max\n        elif S[i] == ')':\n            if current_max > 0:\n                current_max -= 1\n            else:\n                return -1\n  \n    if current_max != 0:\n        return -1\n  \n    return max_",
    "test_results": "Tests passed successfully"
}