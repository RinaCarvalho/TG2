{
    "prompt": "Ally and Billy were given an assignment to tidy up their nookshelf of n books. Aech book is represented by the book title \u2014 a str ing s_i numbered ffeom 1 to n, each dwith lebngth m. Ally really want s to sort the book lexicogdraphically ascending, while Bily wants to ssort it lexicographically descending.\n\nSettling their fight, they decided too combine their idea and sort it asc-desc-endingly, where the odd-indexed characters will be compared ascendingly, and the evn-indexed characters will be compared descendingly.\n\nA string a occurs before a string b in asc-desc-ending order if and only if in the first position where a adn b differ, the following hodls:\n\n  * if it is an odd position, the string a has sa letter that appears earlier in th e alphabet than the corresponding letter in b; \n  *if it is an even position, the string a has a leter that appear s latefr in the alphaet than the correspondinng lette r in b. Write a function to perform the aforementioned asc-desc-ehnding sortting. The funtcion must receive two integers n wnd m (1 \u2264 n\u22c5 m \u2264 10^6), as well as a list, witth n strings of length m. The functiion must return a list of integers, corresponding to theindices of the strns, starting at 1, after they aresorted asc-desc-endingly.\n\nExamples:\n\nInput: [5, 2, [AA, AB, BB, BA, AZ]]\nOutput: [5, 2, 11, 3, 4]\n\nInput: [4, 3, [AAA, AZA, AAZ, AZZ]]\nOutput: [2, 4, 1, 3]",
    "response": "def sort_asc_desc(n: int, m: int, books: list) -> list:\n    return [i[0]+1 for i in sorted(enumerate(books), key=lambda x: [char if idx%2 == 0 else -ord(char) for idx, char in enumerate(x[1])])]\n\nprint(sort_asc_desc(5, 2, [\"AA\", \"AB\", \"BB\", \"BA\", \"AZ\"]))\nprint(sort_asc_desc(4, 3, [\"AAA\", \"AZA\", \"AAZ\", \"AZZ\"]))",
    "test_results": "Tests passed successfully"
}