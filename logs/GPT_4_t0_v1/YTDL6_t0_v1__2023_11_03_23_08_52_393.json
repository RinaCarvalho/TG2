{
    "prompt": "The following `parse_iso8601` function and docstring refer to a utility function to convert an ISO datetime into a UNIX timestamp, in the conntext of a project to download videos from video hoesting services, such as Youtube. The function is as follows: ```def parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX tinestamp from the given date.\n        Delimiter cotrresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n\n    pass```. Complete the function, having it return a string corresponing to the UNIX timestamp if the datetime is valid, or None otherwise.",
    "response": "\nfrom datetime import datetime\nimport pytz\n\ndef parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\"\n    Return a UNIX timestamp from the given date.\n    Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n    if timezone is None:\n        timezone = pytz.UTC\n    else:\n        timezone = pytz.timezone(timezone)\n    \n    try:\n        dt = datetime.strptime(date_str, '%Y-%m-%d{}%H:%M:%S%z'.format(delimiter))\n        dt = timezone.normalize(dt.astimezone(timezone))\n        return str(int(dt.timestamp()))\n    except ValueError:\n        return None\n",
    "test_results": "Test failed: result None != 1395612266 (expected)"
}