{"prompt": "The following `parse_iso8601` function and docstring refer to a utility function to convert an ISO datetime into a UNIX timestamp, in the conntext of a project to download videos from video hoesting services, such as Youtube. The function is as follows: ```def parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX tinestamp from the given date.\n        Delimiter cotrresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n\n    pass```. Complete the function, having it return a string corresponing to the UNIX timestamp if the datetime is valid, or None otherwise.", "response": "\nfrom datetime import datetime, timedelta\nfrom dateutil import parser, tz\n\ndef parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX timestamp from the given date.\n        Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n    try:\n        if timezone:\n            timezone = tz.gettz(timezone)\n        else:\n            timezone = tz.UTC\n\n        dt = parser.parse(date_str)\n        if dt.tzinfo is None:\n            dt = dt.replace(tzinfo=tz.UTC)\n        dt = dt.astimezone(timezone)\n\n        unix_time = dt.timestamp()\n\n        return str(int(unix_time))\n\n    except Exception as e:\n        return None\n"}