{"prompt": "The following `parse_iso8601` function and docstring refer to a utility function to convert an ISO datetime into a UNIX timestamp, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX timestamp from the given date.\n        Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n\n    pass```. Complete the function, having it return a string corresponing to the UNIX timestamp if the datetime is valid, or None otherwise.", "response": "import datetime\nimport pytz\n\ndef parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\"\n    Return a UNIX timestamp from the given date.\n    Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n\n    try:\n        if timezone:\n            tz = pytz.timezone(timezone)\n            dt = datetime.datetime.strptime(date_str, f'%Y-%m-%d{delimiter}%H:%M:%S%z')\n            dt = dt.astimezone(tz)\n            return int(dt.timestamp())\n        else:\n            dt = datetime.datetime.strptime(date_str, f'%Y-%m-%d{delimiter}%H:%M:%S%z')\n            epoch = datetime.datetime(1970, 1, 1, tzinfo=pytz.UTC)\n            return int((dt - epoch).total_seconds())\n    except ValueError:\n        # datetime is not valid\n        return None"}