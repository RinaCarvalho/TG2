{
    "prompt": "The following `escape_rfc3986` function and docstring refer to a utility function to escape non-ASCII characters from a given string, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    pass```. Complete the function, having it return the escaped string.",
    "response": "\nimport urllib.parse\n\ndef escape_rfc3986(s):\n    \"\"\"\n    Escape non-ASCII characters as suggested by RFC 3986.\n    The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    \n    # list of reserved characters\n    reserved_chars = \"!*'();:@&=+$,/?%#[]\"\n    \n    # function to check whether character is safe\n    is_safe = lambda char: char in reserved_chars or char.isalnum()\n    \n    # convert string to list of characters, escape if character is not safe\n    s = ''.join(char if is_safe(char) else urllib.parse.quote(char) for char in s)\n    \n    return s\n",
    "test_results": "Test failed: result \u0442\u0435\u0441\u0442 != %D1%82%D0%B5%D1%81%D1%82 (expected)"
}