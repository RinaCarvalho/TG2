{
    "prompt": "For a given array, write a function to sort it using shell sort. The function must receive an array as input and return an array.",
    "response": "def shellSort(array):\n    n = len(array)\n    gap = n//2\n\n    # We start with a big gap, then reduce the gap\n    while gap > 0:\n        for i in range(gap,n):\n            # add array[i] to the elements that have been gap sorted\n            # save array[i] in temp and make a hole at position i\n            temp = array[i]\n\n            # shift earlier gap-sorted elements up until the correct location for array[i] is found\n            j = i\n            while  j >= gap and array[j-gap] >temp:\n                array[j] = array[j-gap]\n                j -= gap\n\n            # put temp (the original array[i]) in its correct location\n            array[j] = temp\n        gap //= 2\n\n    return array",
    "test_results": "Tests passed successfully"
}