{
    "prompt": "For a given matrix, where each cell is associated with a cost, write a function to find the average cost of the path with the maximum average over all existing paths. A path is defined as a sequence of cells that starts from the top-left cell, moving only right or down, and ending on the bottom right cell. The average is computed as the total cost divided by the number of cells visited in the path. The function must receive a list of lists as input and return a number.",
    "response": "def max_average_path(matrix):\n\n    # Initialize a DP matrix with the same size as given matrix  \n    dp = [[0 for x in range(len(matrix[0]))] for y in range(len(matrix))] \n\n    # The maximum average path would at least pass through the top-left cell,\n    # So at least we have the cost of the top-left cell \n    dp[0][0] = (matrix[0][0], 1)\n    \n    # Update the cost and the count of cells of paths which reach the first row\n    for i in range(1, len(matrix[0])):\n        dp[0][i] = (dp[0][i-1][0] + matrix[0][i], dp[0][i-1][1] + 1)\n          \n    # Update the cost and the count of cells of paths which reach the first column\n    for i in range(1, len(matrix)):\n        dp[i][0] = (dp[i-1][0][0] + matrix[i][0], dp[i-1][0][1] + 1)\n    \n    # Now update the rest of the DP array\n    for i in range(1, len(matrix)):\n        for j in range(1, len(matrix[0])):\n\n            # If the average cost from the left cell is greater than the average cost from the top cell \n            if dp[i-1][j][0]/dp[i-1][j][1] >= dp[i][j-1][0]/dp[i][j-1][1]:\n                dp[i][j] = (dp[i-1][j][0] + matrix[i][j], dp[i-1][j][1] + 1)\n\n            # If the average cost from the top cell is greater than the average cost from the left cell \n            else:\n                dp[i][j] = (dp[i][j-1][0] + matrix[i][j], dp[i][j-1][1] + 1)\n\n    # Finally, the average cost of the maximum average path will be the cost divided by the number of cells on that path\n    return dp[-1][-1][0]/dp[-1][-1][1]",
    "test_results": "Tests passed successfully"
}