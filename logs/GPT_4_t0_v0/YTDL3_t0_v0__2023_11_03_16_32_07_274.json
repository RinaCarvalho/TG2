{"prompt": "The following `escape_rfc3986` function and docstring refer to a utility function to escape non-ASCII characters from a given string, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    pass```. Complete the function, having it return the escaped string.", "response": "\nimport urllib.parse\n\ndef escape_rfc3986(s):\n    \"\"\"\n    Escape non-ASCII characters as suggested by RFC 3986.\n    The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    # List of reserved characters that should not be converted\n    reserved_chars = \"!*'();:@&=+$,/?%#[]\"\n    \n    # Function to check if a character should be escaped or not\n    def should_escape(c):\n        return c.isascii() and c not in reserved_chars\n\n    # Apply escaping to each character in the string, join them back into a string and return\n    return ''.join((c if should_escape(c) else urllib.parse.quote(c)) for c in s)\n"}