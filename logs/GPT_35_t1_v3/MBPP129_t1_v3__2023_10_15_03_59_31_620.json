{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 8]']\nOutput: True\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 7]']\nOutput: False",
    "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    target_sum = n * (n**2 + 1) // 2\n\n    # Check sum of rows\n    for row in matrix:\n        if sum(row) != target_sum:\n            return False\n\n    # Check sum of columns\n    for col in range(n):\n        if sum(row[col] for row in matrix) != target_sum:\n            return False\n\n    # Check sum of diagonal (top-left to bottom-right)\n    if sum(matrix[i][i] for i in range(n)) != target_sum:\n        return False\n\n    # Check sum of diagonal (top-right to bottom-left)\n    if sum(matrix[i][n-i-1] for i in range(n)) != target_sum:\n        return False\n\n    return True\n\nmatrix = [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nprint(is_magic_square(matrix))\n\nmatrix = [[2, 7, 6], [9, 5, 1], [4, 3, 7]]\nprint(is_magic_square(matrix))",
    "test_results": "Test failed: is_magic_square() takes 1 positional argument but 3 were given"
}