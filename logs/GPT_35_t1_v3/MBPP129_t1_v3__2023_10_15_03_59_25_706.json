{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 8]']\nOutput: True\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 7]']\nOutput: False",
    "response": "def is_magic_square(matrix):\n    # Convert input matrix to list of lists\n    matrix = [eval(row) for row in matrix]\n    \n    # Check if all rows' sums are equal\n    row_sums = [sum(row) for row in matrix]\n    if len(set(row_sums)) != 1:\n        return False\n    \n    # Check if all columns' sums are equal\n    col_sums = [sum(col) for col in zip(*matrix)]\n    if len(set(col_sums)) != 1:\n        return False\n    \n    # Check if the sum of the main diagonal is equal to sum of each row/column\n    if sum(matrix[i][i] for i in range(len(matrix))) != sum(row_sums):\n        return False\n    \n    # Check if the sum of the counter diagonal is equal to sum of each row/column\n    if sum(matrix[i][len(matrix)-1-i] for i in range(len(matrix))) != sum(row_sums):\n        return False\n    \n    return True",
    "test_results": "Test failed: eval() arg 1 must be a string, bytes or code object"
}