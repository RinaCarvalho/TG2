{"prompt": "For three given integers a, b and n, write a function that returns integers x and y that satisfy ax + by = n. The function must receive three integers as inputs and return a tuple of integers, if there is a solution, or None otherwise.\n\nExamples:\n\nInput: ['2', '3', '7']\nOutput: [2, 1]\n\nInput: ['4', '2', '7']\nOutput: []", "response": "def find_solution(a, b, n):\n    # initialize x and y as None\n    x = None\n    y = None\n    \n    # check if a and b are not both 0\n    if a != 0 or b != 0:\n        # check if n is divisible by the greatest common divisor of a and b\n        if n % math.gcd(a, b) == 0:\n            # use the extended Euclidean algorithm to find x and y\n            x, y, _ = extended_euclidean_algorithm(a, b)\n            # multiply x and y by n divided by the greatest common divisor of a and b\n            x = x * (n // math.gcd(a, b))\n            y = y * (n // math.gcd(a, b))\n    \n    # return (x, y) if x and y are not None, otherwise return None\n    return (x, y) if (x is not None) and (y is not None) else None\n\ndef extended_euclidean_algorithm(a, b):\n    if b == 0:\n        return 1, 0, a\n    else:\n        x, y, gcd = extended_euclidean_algorithm(b, a % b)\n        return y, x - (a // b) * y, gcd\n\na = int(input())\nb = int(input())\nn = int(input())\n\nfind_solution(a, b, n)"}