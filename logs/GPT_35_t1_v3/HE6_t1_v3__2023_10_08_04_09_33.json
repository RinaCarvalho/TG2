{
    "prompt": "For a given string with multiple groups of nested parentheses, write a function to determine the deepest level of nesting of the parentheses. The function must receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 1\n\nInput: ((())()()\nOutput: 3",
    "response": "def deepest_level_nesting(s):\n    max_level = 0\n    level = 0\n\n    for c in s:\n        if c == \"(\":\n            level += 1\n            max_level = max(max_level, level)\n        elif c == \")\":\n            level -= 1\n\n    return max_level\n\nprint(deepest_level_nesting(\"()\"))\nprint(deepest_level_nesting(\"((())()()\"))\nprint(deepest_level_nesting(\"((()))\"))\nprint(deepest_level_nesting(\"()()()()\"))\nprint(deepest_level_nesting(\"((())(()))()\"))\nprint(deepest_level_nesting(\"()()()()()()()()\"))",
    "test_results": "Tests passed successfully"
}