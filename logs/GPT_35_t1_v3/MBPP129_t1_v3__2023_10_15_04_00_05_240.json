{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 8]']\nOutput: True\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 7]']\nOutput: False",
    "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    \n    # Calculate the sum of first row\n    target_sum = sum(matrix[0])\n    \n    # Check if sum of each row is equal to target sum\n    if not all(sum(row) == target_sum for row in matrix):\n        return False\n    \n    # Check if sum of each column is equal to target sum\n    if not all(sum(matrix[i][j] for i in range(n)) == target_sum for j in range(n)):\n        return False\n\n    # Check if sum of diagonal is equal to target sum\n    if sum(matrix[i][i] for i in range(n)) != target_sum:\n        return False\n\n    # Check if sum of antidiagonal is equal to target sum\n    if sum(matrix[i][n-i-1] for i in range(n)) != target_sum:\n        return False\n    \n    return True\n\n# Test case 1\nmatrix_1 = [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nis_magic_square(matrix_1)\n\n# Test case 2\nmatrix_2 = [[2, 7, 6], [9, 5, 1], [4, 3, 7]]\nis_magic_square(matrix_2)",
    "test_results": "Tests passed successfully"
}