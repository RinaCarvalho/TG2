{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 8]']\nOutput: True\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 7]']\nOutput: False",
    "response": "def is_magic_square(matrix):\n    n = len(matrix)\n    \n    # Check if sum of all rows is equal\n    row_sum = sum(matrix[0])\n    for i in range(1, n):\n        if sum(matrix[i]) != row_sum:\n            return False\n    \n    # Check if sum of all columns is equal\n    col_sum = sum(matrix[0][j] for j in range(n))\n    for j in range(n):\n        if sum(matrix[i][j] for i in range(n)) != col_sum:\n            return False\n    \n    # Check if sum of the main diagonal is equal\n    main_diag_sum = sum(matrix[i][i] for i in range(n))\n    if main_diag_sum != row_sum:\n        return False\n    \n    # Check if sum of the anti-diagonal is equal\n    anti_diag_sum = sum(matrix[i][n-i-1] for i in range(n))\n    if anti_diag_sum != row_sum:\n        return False\n    \n    return True",
    "test_results": "Test failed: is_magic_square() takes 1 positional argument but 3 were given"
}