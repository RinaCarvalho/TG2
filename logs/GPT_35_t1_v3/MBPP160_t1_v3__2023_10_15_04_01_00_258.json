{"prompt": "For three given integers a, b and n, write a function that returns integers x and y that satisfy ax + by = n. The function must receive three integers as inputs and return a tuple of integers, if there is a solution, or None otherwise.\n\nExamples:\n\nInput: ['2', '3', '7']\nOutput: [2, 1]\n\nInput: ['4', '2', '7']\nOutput: []", "response": "def find_solution(a, b, n):\n    # check if a and b are both 0, then n must also be 0\n    if a == b == 0 and n != 0:\n        return None\n    \n    # check if n is divisible by gcd(a, b)\n    if n % gcd(a, b) != 0:\n        return None\n    \n    # find x and y using extended euclidean algorithm\n    x, y, _ = extended_euclidean(a, b)\n    \n    # multiply x and y by n / gcd(a, b)\n    x *= n // gcd(a, b)\n    y *= n // gcd(a, b)\n    \n    return x, y\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\ndef extended_euclidean(a, b):\n    if b == 0:\n        return 1, 0, a\n    else:\n        x, y, d = extended_euclidean(b, a % b)\n        return y, x - (a // b) * y, d\n\n# Test cases\nprint(find_solution(2, 3, 7))\nprint(find_solution(4, 2, 7))"}