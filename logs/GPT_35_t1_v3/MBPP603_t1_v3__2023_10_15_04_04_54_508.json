{"prompt": "For a given integer n, write a function to get all ludic numbers smaller than or equal to n. The function must receive an integer as input and return a list of integers.\n\nExamples:\n\nInput: 10\nOutput: (1, 2, 3, 5, 7)\n\nInput: 25\nOutput: (1, 2, 3, 5, 7, 11, 13, 17, 23, 25)", "response": "def get_ludic_numbers(n):\n    ludic_numbers = []\n    if n >= 1:\n        ludic_numbers.append(1)\n    \n    primes = []\n    is_prime = [True] * (n+1)\n    p = 2\n    while p * p <= n:\n        if is_prime[p] == True:\n            for i in range(p * p, n+1, p):\n                is_prime[i] = False\n        p += 1\n\n    for p in range(2,n+1):\n        if is_prime[p]:\n            primes.append(p)\n    \n    for i in range(2, n+1):\n        if any([i % p == 0 for p in primes]):\n            continue\n        ludic_numbers.append(i)\n    \n    return tuple(ludic_numbers)"}