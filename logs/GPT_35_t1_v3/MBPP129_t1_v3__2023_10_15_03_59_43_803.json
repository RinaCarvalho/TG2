{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 8]']\nOutput: True\n\nInput: ['[2, 7, 6]', '[9, 5, 1]', '[4, 3, 7]']\nOutput: False",
    "response": "import numpy as np\n\ndef is_magic_square(matrix):\n    arr = np.array(matrix)\n    if arr.shape[0] != arr.shape[1]:\n        return False\n    n = arr.shape[0]\n    magic_sum = n * (n**2 + 1) // 2\n    \n    # Check rows\n    if not np.all(arr.sum(axis=1) == magic_sum):\n        return False\n    \n    # Check columns\n    if not np.all(arr.sum(axis=0) == magic_sum):\n        return False\n    \n    # Check diagonals\n    if np.trace(arr) != magic_sum or np.trace(np.flip(arr, axis=0)) != magic_sum:\n        return False\n    \n    return True",
    "test_results": "Test failed: is_magic_square() takes 1 positional argument but 3 were given"
}