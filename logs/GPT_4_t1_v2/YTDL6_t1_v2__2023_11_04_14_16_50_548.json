{"prompt": "The following `parse_iso8601` function and docstring refer to a utility function to convert an ISO datetime into a UNIX timestamp, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX timestamp from the given date.\n        Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n\n    pass```. Complete the function, having it return a string corresponing to the UNIX timestamp if the datetime is valid, or None otherwise.\n\nExamples:\n\nInput: 2014-03-23T23:04:26+0100\nOutput: 1395612265\n\nInput: 2014-03-23T22:04:26Z\nOutput: 1395612265", "response": "\nfrom datetime import datetime\nimport pytz\n\ndef parse_iso8601(date_str, delimiter='T', timezone=None):\n    try:\n        if 'Z' in date_str:\n            date_str = date_str.replace('Z', '')\n            dt = datetime.strptime(date_str, '%Y-%m-%d'+delimiter+'%H:%M:%S')\n            aware_dt = pytz.utc.localize(dt)\n        else:\n            date_format = '%Y-%m-%d'+delimiter+'%H:%M:%S%z'\n            aware_dt = datetime.strptime(date_str, date_format)\n        timestamp = int(aware_dt.timestamp())\n        return str(timestamp)\n\n    except ValueError as error:\n        print(f\"An error occured: {error}\")\n        return None\n    "}