{
    "prompt": "For a given matrix, write a function to check if the matrix is a magic square. The function must receive a list of lists and return a boolean.\n\nExamples:\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 7]]\nOutput: True\n\nInput: [[2, 7, 6], [9, 5, 1], [4, 3, 8]]\nOutput: False",
    "response": "def is_magic_square(matrix):\n    size = len(matrix)\n    \n    # Calculate the sum of the prime diagonal:\n    diag_sum = sum(matrix[i][i] for i in range(size))\n    \n    # Calculate the array sum of columns and rows:\n    row_sums = [sum(row) for row in matrix]\n    col_sums = [sum(row[i] for row in matrix) for i in range(size)]\n    \n    # If not all sums are equal to the prime diagonal, not a magic square:\n    if any(sum != diag_sum for sum in row_sums + col_sums):\n        return False\n\n    # Calculate secondary diagonal sum\n    sec_diag_sum = sum(matrix[i][size - 1 - i] for i in range(size))\n    \n    # If secondary diagonal sum is not equal to the prime diagonal, not a magic square:\n    if sec_diag_sum != diag_sum:\n        return False\n\n    return True",
    "test_results": "Tests passed successfully"
}