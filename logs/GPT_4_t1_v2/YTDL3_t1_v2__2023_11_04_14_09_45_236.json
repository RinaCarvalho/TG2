{
    "prompt": "The following `escape_rfc3986` function and docstring refer to a utility function to escape non-ASCII characters from a given string, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    pass```. Complete the function, having it return the escaped string.\n\nExamples:\n\nInput: !*'();:@&=+$,/?%#[]\nOutput: %21%2A%5C%27%28%29%3B%3A%40%26%3D%2B%24%2C%2F%3F%25%23%5B%5D\n\nInput: foo bar\nOutput: foo%20bar",
    "response": "import urllib.parse\n\ndef escape_rfc3986(s):\n    \"\"\" Escape non-ASCII characters as suggested by RFC 3986.\n        The characters \"!*'();:@&=+$,/?%#[]\" are reserved and aren't converted.\n    \"\"\"\n    reserved_chars = \"!*'();:@&=+$,/?%#[]\"\n    escaped_string = \"\"\n    for c in s:\n        if c in reserved_chars:\n            escaped_string += '%' + hex(ord(c))[2:].upper()\n        else:\n            escaped_string += urllib.parse.quote(c, safe=\"~\")\n    return escaped_string",
    "test_results": "Test failed: result %21%2A%27%28%29%3B%3A%40%26%3D%2B%24%2C%2F%3F%25%23%5B%5D != !*'();:@&=+$,/?%#[] (expected)"
}