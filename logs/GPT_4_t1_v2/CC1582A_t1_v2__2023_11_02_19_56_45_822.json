{"prompt": "Luntik has decided to try singing. He has a one-minute songs, b two-minute songs and c three-minute songs. He wants to distribute all songs into two concerts such that every song should be included to exactly one concert. The duration of the concert is the sum of durations of all songs in that concert. Write a function to find the minimal possible difference in minutes between the concerts durations. The function must receive three integers a, b and c, and return an integer.\n\nExamples:\n\nInput: ['1', '1', '1']\nOutput: 1\n\nInput: ['2', '1', '3']\nOutput: 0", "response": "def concert_duration(a, b, c):\n    total_time = a + 2*b + 3*c\n    concert1_time = total_time // 2\n    dp = [0]*(concert1_time + 1)\n    \n    for i in range(a):\n        for j in range(concert1_time, 0, -1):\n            if j >= 1: dp[j] = max(dp[j], dp[j-1] + 1)\n    \n    for i in range(b):\n        for j in range(concert1_time, 0, -1):\n            if j >= 2: dp[j] = max(dp[j], dp[j-2] + 2)\n    \n    for i in range(c):\n        for j in range(concert1_time, 0, -1):\n            if j >= 3: dp[j] = max(dp[j], dp[j-3] + 3)\n    \n    return total_time - 2*dp[concert1_time]"}