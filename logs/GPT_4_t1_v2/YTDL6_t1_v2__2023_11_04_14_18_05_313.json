{
    "prompt": "The following `parse_iso8601` function and docstring refer to a utility function to convert an ISO datetime into a UNIX timestamp, in the context of a project to download videos from video hosting services, such as Youtube. The function is as follows: ```def parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\" Return a UNIX timestamp from the given date.\n        Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n\n    pass```. Complete the function, having it return a string corresponing to the UNIX timestamp if the datetime is valid, or None otherwise.\n\nExamples:\n\nInput: 2014-03-23T23:04:26+0100\nOutput: 1395612265\n\nInput: 2014-03-23T22:04:26Z\nOutput: 1395612265",
    "response": "from datetime import datetime, timedelta\n\ndef parse_iso8601(date_str, delimiter='T', timezone=None):\n    \"\"\"Return a UNIX timestamp from the given date.\n       Delimiter corresponds to the time delimiter (e.g. 2023-10-19T00:00:00+0000)\n    \"\"\"\n    if date_str.endswith('Z'):\n        date_str = date_str[:-1] + '+0000'\n    try:\n        date_obj = datetime.strptime(date_str, '%Y-%m-%d' + delimiter + '%H:%M:%S%z')\n        unix_timestamp = date_obj.timestamp()\n        return int(unix_timestamp)\n    except ValueError:\n        return None",
    "test_results": "Test failed: result 1395612266 != 1395612266 (expected)"
}