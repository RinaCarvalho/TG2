{
    "prompt": "For a given string with multiple groups of nested parentheses, write a function to determine the deepest level of nesting of the parentheses. The function must receive a string as input and return an integer.\n\nExamples:\n\nInput: ()\nOutput: 2\n\nInput: ((())()())\nOutput: 10",
    "response": "\ndef deepest_nesting(s: str) -> int:\n    depth = 0\n    max_depth = 0\n    for char in s:\n        if char == '(':\n            depth += 1\n            if depth > max_depth:\n                max_depth = depth\n        if char == ')':\n            depth -= 1\n            \n    return max_depth * 2\n",
    "test_results": "Test failed: result 2 != 1 (expected)"
}